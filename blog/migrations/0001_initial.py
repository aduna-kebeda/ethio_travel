# Generated by Django 3.1.12 on 2025-04-26 08:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('excerpt', models.TextField()),
                ('content', models.TextField()),
                ('tags', models.JSONField(blank=True, default=list)),
                ('imageUrl', models.URLField(blank=True, max_length=500, null=True)),
                ('authorName', models.CharField(blank=True, max_length=200)),
                ('authorImage', models.URLField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('views', models.PositiveIntegerField(default=0)),
                ('readTime', models.CharField(blank=True, max_length=50, null=True)),
                ('featured', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(db_column='author_id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'blog_blogpost',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='SavedPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='blog.blogpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('imageUrl', models.URLField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blog.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'blog_category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='subscribers', to='blog.Category')),
            ],
        ),
        migrations.AddField(
            model_name='blogpost',
            name='category',
            field=models.ForeignKey(db_column='category_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.category'),
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(max_length=200)),
                ('userImage', models.URLField(blank=True, max_length=500, null=True)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.blogcomment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blogpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-createdAt'],
            },
        ),
        migrations.AddIndex(
            model_name='savedpost',
            index=models.Index(fields=['user', 'post'], name='blog_savedp_user_id_89b5f8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='savedpost',
            unique_together={('user', 'post')},
        ),
        migrations.AddIndex(
            model_name='blogsubscription',
            index=models.Index(fields=['email'], name='blog_blogsu_email_47f723_idx'),
        ),
        migrations.AddIndex(
            model_name='blogsubscription',
            index=models.Index(fields=['is_active'], name='blog_blogsu_is_acti_354340_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['title'], name='blog_blogpo_title_2aa4d1_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['status'], name='blog_blogpo_status_9c1956_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['featured'], name='blog_blogpo_feature_0ec342_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['category'], name='blog_blogpo_categor_c7bd72_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['author'], name='blog_blogpo_author__0d5a17_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['post', 'user'], name='blog_blogco_post_id_8b06f0_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['parent'], name='blog_blogco_parent__06954d_idx'),
        ),
    ]
